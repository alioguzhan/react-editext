{"version":3,"file":"index.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/utils.ts","../src/index.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","export function classnames(...args: any[]) {\n  /**\n   * Our simple classnames replica.\n   * This is enough for me.\n   */\n  return Array(...args)\n    .filter((a) => a)\n    .join(' ');\n}\n\nexport const dataAttributes = {\n  /**\n   * This is for the end user. You can use below attributes if you want to\n   * style this component with `styled-components` or something like that.\n   * Example notation:\n   * <div class=\"EdiText_Buttons__container_34fgAsdf\" editext=\"button-container\">\n   * Example usage with styled-components:\n\n    const StyledEdiText = styled(EdiText)`\n      button[editext=\"edit-button\"] {\n        color: #000;\n      }\n      button[editext=\"save-button\"] {\n        background:#587C0C;\n        color: #fff;\n      }\n      input, textarea {\n        background: #1D2225;\n        color: #F4C361;\n        font-weight: bold;\n      }\n    `\n   */\n  mainContainer: 'main-container',\n  viewContainer: 'view-container',\n  buttonContainer: 'button-container',\n  editContainer: 'edit-container',\n  editButton: 'edit-button',\n  saveButton: 'save-button',\n  cancelButton: 'cancel-button',\n  input: 'input',\n  hint: 'hint',\n};\n\nexport const cancelOnConflictMessage =\n  'EdiText: Both `cancelOnUnfocus` and `submitOnUnfocus` are set to true. ' +\n  '`submitOnUnfocus` is ignored in this case. Please remove one of these.';\n","import React, {\n  useEffect,\n  KeyboardEvent,\n  FocusEvent,\n  useState,\n  ChangeEvent,\n} from 'react';\nimport styles from './styles.module.css';\nimport { cancelOnConflictMessage, dataAttributes, classnames } from './utils';\n\ntype EdiTextType =\n  | 'text'\n  | 'textarea'\n  | 'email'\n  | 'number'\n  | 'date'\n  | 'datetime-local'\n  | 'time'\n  | 'month'\n  | 'url'\n  | 'week'\n  | 'tel';\ntype ButtonsAlignment = 'after' | 'before';\n\ntype InputProps =\n  | React.DetailedHTMLProps<\n      React.InputHTMLAttributes<HTMLInputElement>,\n      HTMLInputElement\n    >\n  | React.DetailedHTMLProps<\n      React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n      HTMLTextAreaElement\n    >;\ninterface EdiTextProps {\n  /**\n   * Props to be passed to input element.\n   * Any kind of valid DOM attributes are welcome\n   */\n  inputProps?: React.DetailedHTMLProps<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement\n  >;\n  /**\n   * Props to be passed to div element that shows the text.\n   * You can specify your own `styles` or `className`\n   */\n  viewProps?: React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  >;\n  /**\n   * Props to be passed to div element that is container for all elements.\n   * You can use this if you want to style or select the whole container.\n   */\n  containerProps?: React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  >;\n  /**\n   * Value of the content [in view mode] and input [in edit mode]\n   */\n  value: string;\n  /**\n   * A simple hint message appears at the bottom of input element.\n   * Any valid element is allowed.\n   */\n  hint?: React.ReactNode;\n  /**\n   * If validation fails this message will appear\n   */\n  validationMessage?: any;\n  /** Pass your own validation function.\n   * takes one param -> `value`.\n   * It must return `true` or `false`\n   */\n  validation?: (...args: string[]) => boolean;\n  /**\n   * will be called when validation fails.\n   * takes one param <value> which is the current value of input\n   */\n  onValidationFail?: (...args: string[]) => any;\n  /**\n   * Input type. Possible options are:\n   * `text`, `number`, `email`, `textarea`, `date`,\n   * `datetime-local`, `time`, `month`, `url`, `week`, `tel`\n   * @default \"text\"\n   */\n  type?: EdiTextType;\n  /**\n   * will be called when user clicked cancel button\n   * @param value the current value of input when cancelled.\n   * @param inputProps inputProps that passed to the element.\n   */\n  onCancel?: (value: any, inputProps?: InputProps) => any;\n  /**\n   * will be called when user clicked save button.\n   * @param value the current value of input\n   * @param inputProps inputProps that passed to the element.\n   */\n  onSave: (value: any, inputProps?: InputProps) => any;\n  /**\n   * Custom class name for SAVE button.\n   * */\n  saveButtonClassName?: string;\n  /**\n   * Custom class name for EDIT button.\n   * */\n  editButtonClassName?: string;\n  /**\n   * Custom class name for CANCEL button. */\n  cancelButtonClassName?: string;\n  /**\n   * Content for CANCEL button. Any valid element and node are allowed. */\n  cancelButtonContent?: any;\n  /**\n   * Content for SAVE button. Any valid element and node are allowed. */\n  saveButtonContent?: any;\n  /**\n   * Content for EDIT button. Any valid element and node are allowed. */\n  editButtonContent?: any;\n  /**\n   * Set it to `true` if you don't want to see default icons\n   * on action buttons.See Examples page for more details.\n   * @default \"false\"\n   */\n  hideIcons?: boolean;\n  /**\n   * Decides whether buttons will be located _BEFORE_ or _AFTER_\n   * the input element.\n   * @default \"after\"\n   */\n  buttonsAlign?: ButtonsAlignment;\n  /**\n   * Custom class name for the container in view mode.\n   */\n  viewContainerClassName?: string;\n  /**\n   * Custom class name for the container in edit mode.\n   * Will be set to viewContainerClassName if you set it and omit this.\n   */\n  editContainerClassName?: string;\n  /**\n   * Custom class name for the top-level main container.\n   * @deprecated please use `containerProps` instead of this\n   */\n  mainContainerClassName?: string;\n  /**\n   * Set it to `true` if you want clicking on the view to activate the editor.\n   * @default false\n   */\n  editOnViewClick?: boolean;\n  /**\n   * Set it to `true` if you want the view state to be edit mode\n   * @default false\n   */\n  editing?: boolean;\n  /**\n   * Will be called when the editing mode is active.\n   *\n   * @param value the value of the input at the time when editing started.\n   * @param inputProps inputProps that passed to the element.\n   */\n  onEditingStart?: (value: any, inputProps?: InputProps) => any;\n  /**\n   * Set it to `true` if you want to display action buttons **only**\n   * when the text hovered by the user.\n   * @default false\n   */\n  showButtonsOnHover?: boolean;\n  /**\n   * Set it to `true` if you want to submit the form when `Enter`\n   * is pressed.\n   * @default false\n   */\n  submitOnEnter?: boolean;\n  /**\n   * Set it to `true` if you want to cancel the form when `Escape`\n   * is pressed.\n   * @default false\n   */\n  cancelOnEscape?: boolean;\n  /**\n   * Set it to `true` if you want to cancel the form when the input\n   * is unfocused.\n   * @default false\n   */\n  cancelOnUnfocus?: boolean;\n  /**\n   * Set it to `true` if you want to save the form when the input\n   * is unfocused.\n   * @default false\n   */\n  submitOnUnfocus?: boolean;\n  /**\n   * An helper shortcut in case you want to pass the same tabIndex to both\n   * `viewProps` and `inputProps`.\n   *\n   * NOTE: This will be overriden if you pass the tabIndex in `viewProps`\n   * or `inputProps`.\n   */\n  tabIndex?: number;\n  /**\n   * Activates the edit mode when the view container is in focus.\n   */\n  startEditingOnFocus?: boolean;\n  /**\n   * Activates the edit mode when the `Enter` key is pressed if the view\n   * container is focused.\n   *\n   * NOTE: This requires the element to be in focus.\n   */\n  startEditingOnEnter?: boolean;\n  /**\n   * Custom render method for the content in the view mode.\n   * Use this prop to customize the displayed value in view mode.\n   * The return value from this function will be rendered in view mode.\n   * You can return string or JSX. Both are allowed.\n   */\n  renderValue?: (value: any) => any;\n}\n\nexport default function EdiText({\n  value,\n  type = 'text',\n  validationMessage = 'Invalid Value',\n  cancelButtonContent = '',\n  saveButtonContent = '',\n  editButtonContent = '',\n  buttonsAlign = 'after',\n  saveButtonClassName = '',\n  cancelButtonClassName = '',\n  editButtonClassName = '',\n  viewContainerClassName = '',\n  editContainerClassName = '',\n  mainContainerClassName = '',\n  ...props\n}: EdiTextProps) {\n  // state\n  const [editingInternal, setEditingInternal] = useState(props.editing);\n  const [valid, setValid] = useState<boolean>(true);\n  const [valueInternal, setValueInternal] = useState<string>(value || '');\n  const [savedValue, setSavedValue] = useState<string | undefined>(undefined);\n  const [viewFocused, setViewFocused] = useState<boolean>(false);\n  // refs\n  const saveButton = React.createRef<HTMLButtonElement>();\n  const editingContainer = React.createRef<HTMLDivElement>();\n  const editingButtons = React.createRef<any>();\n\n  useEffect(() => {\n    if (props.cancelOnUnfocus && props.submitOnUnfocus) {\n      console.warn(cancelOnConflictMessage);\n    }\n  }, [props.cancelOnUnfocus, props.submitOnUnfocus]);\n\n  useEffect(() => {\n    if (value !== undefined) {\n      setValueInternal(value);\n      setSavedValue(value);\n    }\n\n    if (props.editing !== undefined) {\n      setEditingInternal(props.editing);\n    }\n  }, [props.editing, value]);\n\n  function handleKeyDown(e: KeyboardEvent<any>): void {\n    const isEnter = [13, 'Enter'].some((c) => e.key === c || e.code === c);\n    const isEscape = [27, 'Escape', 'Esc'].some(\n      (c) => e.code === c || e.key === c\n    );\n    if (isEnter) {\n      props.submitOnEnter && handleSave();\n      e?.preventDefault();\n    }\n    if (isEscape) {\n      props.cancelOnEscape && handleCancel();\n      e.preventDefault();\n    }\n    props.inputProps?.onKeyDown && props.inputProps.onKeyDown(e);\n  }\n\n  function handleOnBlur(e: FocusEvent<any>): void {\n    const isEditingButton = editingButtons.current?.contains(e?.relatedTarget);\n    props.cancelOnUnfocus && !isEditingButton && handleCancel();\n    props.submitOnUnfocus &&\n      !isEditingButton &&\n      !props.cancelOnUnfocus &&\n      handleSave();\n    props.inputProps?.onBlur && props.inputProps.onBlur(e);\n  }\n\n  function handleViewFocus(e: FocusEvent<HTMLInputElement>): void {\n    setViewFocused(true);\n    props.startEditingOnFocus && setEditingInternal(true);\n    props.viewProps?.onFocus && props.viewProps.onFocus(e);\n  }\n\n  function handleKeyDownForView(e: KeyboardEvent<any>): void {\n    const isEnter = [13, 'Enter'].some((c) => e.key === c || e.code === c);\n    const startEditing = isEnter && viewFocused && props.startEditingOnEnter;\n    startEditing && e.preventDefault();\n    startEditing && setEditingInternal(true);\n    props.viewProps?.onKeyDown && props.viewProps.onKeyDown(e);\n  }\n\n  function handleInputChange(\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ): void {\n    setValid(true);\n    setValueInternal(e.target.value);\n  }\n\n  function handleCancel(): void {\n    const val = savedValue ?? value;\n    setValid(true);\n    setEditingInternal(false);\n    setValueInternal(val);\n    props.onCancel?.(val, props.inputProps);\n  }\n\n  function handleActivateEditMode(): void {\n    setEditingInternal(true);\n    props.onEditingStart?.(valueInternal, props.inputProps);\n  }\n\n  function handleSave(): void {\n    if (typeof props.validation === 'function') {\n      const isValid = props.validation(valueInternal);\n      if (!isValid) {\n        setValid(false);\n        props.onValidationFail && props.onValidationFail(valueInternal);\n        return;\n      }\n    }\n    setEditingInternal(false);\n    setSavedValue(valueInternal);\n    props.onSave(valueInternal, props.inputProps);\n  }\n\n  function _renderInput() {\n    if (type === 'textarea') {\n      return (\n        <textarea\n          className={styles.Editext__input}\n          // @ts-ignore\n          editext={dataAttributes.input}\n          // this is here because,\n          // we still allow people to pass the tabIndex via inputProps\n          // also backward compatibility.\n          tabIndex={props.tabIndex}\n          {...(props.inputProps as React.DetailedHTMLProps<\n            React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n            HTMLTextAreaElement\n          >)}\n          onBlur={handleOnBlur}\n          value={valueInternal}\n          onChange={handleInputChange}\n          autoFocus={editingInternal}\n        />\n      );\n    } else {\n      return (\n        <input\n          className={styles.Editext__input}\n          // @ts-ignore\n          editext={dataAttributes.input}\n          // this is here because,\n          // we still allow people to pass the tabIndex via inputProps\n          // also backward compatibility.\n          tabIndex={props.tabIndex}\n          {...props.inputProps}\n          onKeyDown={handleKeyDown}\n          onBlur={handleOnBlur}\n          value={valueInternal}\n          type={type}\n          onChange={handleInputChange}\n          autoFocus={editingInternal}\n        />\n      );\n    }\n  }\n\n  function _renderEditingMode() {\n    const inputElem = _renderInput();\n    // calculate save button classes\n    const saveButtonDefaultClasses = classnames(\n      `${styles.Editext__button}`,\n      `${styles.Editext__save_button}`,\n      props.hideIcons && `${styles.Editext__hide_default_icons}`\n    );\n    const saveButtonClass = saveButtonClassName || saveButtonDefaultClasses;\n    // calculate cancel button classes\n    const cancelButtonDefaultClasses = classnames(\n      `${styles.Editext__button}`,\n      `${styles.Editext__cancel_button}`,\n      props.hideIcons && `${styles.Editext__hide_default_icons}`\n    );\n    const cancelButtonClass =\n      cancelButtonClassName || cancelButtonDefaultClasses;\n    let editContainerClass = styles.Editext__editing_container;\n    if (editContainerClassName) editContainerClass = editContainerClassName;\n    if (viewContainerClassName) editContainerClass = viewContainerClassName;\n    const buttonsContainerClass = classnames(\n      styles.Editext__buttons_container,\n      buttonsAlign === 'before' && `${styles.Editext__buttons_before_aligned}`,\n      buttonsAlign === 'after' && `${styles.Editext__buttons_after_aligned}`\n    );\n    return (\n      <div>\n        <div\n          ref={editingContainer}\n          className={editContainerClass}\n          // @ts-ignore\n          editext={dataAttributes.editContainer}\n        >\n          {buttonsAlign === 'after' && inputElem}\n          <div className={buttonsContainerClass} ref={editingButtons}>\n            <button\n              ref={saveButton}\n              // @ts-ignore\n              editext={dataAttributes.saveButton}\n              type=\"button\"\n              className={saveButtonClass}\n              onClick={handleSave}\n            >\n              {saveButtonContent}\n            </button>\n            <button\n              type=\"button\"\n              // @ts-ignore\n              editext={dataAttributes.cancelButton}\n              className={cancelButtonClass}\n              onClick={handleCancel}\n            >\n              {cancelButtonContent}\n            </button>\n          </div>\n          {buttonsAlign === 'before' && inputElem}\n        </div>\n        {!valid && !props.onValidationFail && (\n          <div className={styles.Editext__validation_message}>\n            {validationMessage}\n          </div>\n        )}\n        {props.hint && (\n          <div\n            className={styles.Editext__hint}\n            // @ts-ignore\n            editext={dataAttributes.hint}\n          >\n            {props.hint}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  function _renderViewMode() {\n    // calculate edit button classes\n    const editButtonDefaultClasses = classnames(\n      `${styles.Editext__button}`,\n      `${styles.Editext__edit_button}`,\n      props.hideIcons && `${styles.Editext__hide_default_icons}`\n    );\n    const editButtonClass = editButtonClassName || editButtonDefaultClasses;\n    const viewContainerClass = classnames(\n      viewContainerClassName || styles.Editext__view_container,\n      props.showButtonsOnHover &&\n        `${styles.Editext__buttons_showButtonsOnHover}`\n    );\n    const buttonsContainerClass = classnames(\n      styles.Editext__buttons_container,\n      buttonsAlign === 'before' && `${styles.Editext__buttons_before_aligned}`,\n      buttonsAlign === 'after' && `${styles.Editext__buttons_after_aligned}`\n    );\n    const viewClickHandler = props.editOnViewClick\n      ? handleActivateEditMode\n      : undefined;\n    const _value =\n      typeof props.renderValue === 'function'\n        ? props.renderValue(valueInternal)\n        : valueInternal;\n    return (\n      <div\n        className={viewContainerClass}\n        // @ts-ignore\n        editext={dataAttributes.viewContainer}\n      >\n        {buttonsAlign === 'after' && (\n          <div\n            // this is here because,\n            // we still allow people to pass the tabIndex via inputProps\n            // also backward compatibility.\n            tabIndex={props.tabIndex}\n            {...props.viewProps}\n            onKeyDown={handleKeyDownForView}\n            onFocus={handleViewFocus}\n            onClick={viewClickHandler}\n            // @ts-ignore\n            editext=\"view\"\n          >\n            {_value}\n          </div>\n        )}\n        <div className={buttonsContainerClass}>\n          <button\n            type=\"button\"\n            // @ts-ignore\n            editext={dataAttributes.editButton}\n            className={editButtonClass}\n            onClick={handleActivateEditMode}\n          >\n            {editButtonContent}\n          </button>\n        </div>\n        {buttonsAlign === 'before' && (\n          <div\n            // this is here because,\n            // we still allow people to pass the tabIndex via inputProps\n            // also backward compatibility.\n            tabIndex={props.tabIndex}\n            {...props.viewProps}\n            onKeyDown={handleKeyDownForView}\n            onFocus={handleViewFocus}\n            onClick={viewClickHandler}\n            // @ts-ignore\n            editext={dataAttributes.viewContainer}\n          >\n            {_value}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  const mode = editingInternal ? _renderEditingMode() : _renderViewMode();\n  const clsName = classnames(\n    mainContainerClassName || styles.Editext__main_container,\n    props.containerProps?.className\n  );\n  return (\n    <div\n      className={clsName}\n      {...props.containerProps}\n      // @ts-ignore\n      editext={dataAttributes.mainContainer}\n    >\n      {mode}\n    </div>\n  );\n}\n"],"names":["useState","React","useEffect","_jsx","_jsxs"],"mappings":"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"}