{"version":3,"file":"index.es.js","sources":["../src/utils.js","../node_modules/style-inject/dist/style-inject.es.js","../src/index.js"],"sourcesContent":["export function classnames() {\n  /**\n   * Our simple classnames replica.\n   * This is enough for me.\n   */\n  return Array(...arguments)\n    .filter(a => a)\n    .join(' ')\n}\n\nexport const dataAttributes = {\n  /**\n   * This is for the end user. You can use below attributes if you want to\n   * style this component with `styled-components` or something like that.\n   * Example notation:\n   * <div class=\"EdiText_Buttons__container_34fgAsdf\" editext=\"button-container\">\n   * Example usage with styled-components:\n\n    const StyledEdiText = styled(EdiText)`\n      button[editext=\"edit-button\"] {\n        color: #000;\n      }\n      button[editext=\"save-button\"] {\n        background:#587C0C;\n        color: #fff;\n      }\n      input, textarea {\n        background: #1D2225;\n        color: #F4C361;\n        font-weight: bold;\n      }\n    `\n   */\n  viewContainer: 'view-container',\n  buttonContainer: 'button-container',\n  editContainer: 'edit-container',\n  editButton: 'edit-button',\n  saveButton: 'save-button',\n  cancelButton: 'cancel-button',\n  input: 'input',\n  hint: 'hint'\n}\n\nexport const cancelOnConflictMessage =\n  'EdiText: Both `cancelOnUnfocus` and `submitOnUnfocus` are set to true. ' +\n  '`submitOnUnfocus` is ignored in this case. Please remove one of these.'\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './styles.css'\nimport { cancelOnConflictMessage, dataAttributes, classnames } from './utils'\n\nexport default class EdiText extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      editing: props.editing,\n      valid: true,\n      value: props.value || '',\n      savedValue: '',\n      viewFocused: false\n    }\n    this.saveButton = React.createRef()\n    this.input = React.createRef()\n    this.editingContainer = React.createRef()\n    this.editingButtons = React.createRef()\n  }\n\n  componentDidMount() {\n    this.checkPropsConsistency()\n  }\n\n  checkPropsConsistency() {\n    if (this.props.cancelOnUnfocus && this.props.submitOnUnfocus) {\n      console.warn(cancelOnConflictMessage)\n    }\n  }\n\n  componentDidUpdate(prevProps, _prevState) {\n    const nextState = {}\n    if (\n      this.props.value !== undefined &&\n      prevProps.value !== this.props.value\n    ) {\n      nextState.value = this.props.value\n    }\n\n    if (\n      prevProps.editing !== undefined &&\n      prevProps.editing !== this.props.editing\n    ) {\n      nextState.editing = this.props.editing\n    }\n\n    if (Object.keys(nextState).length > 0) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState(nextState)\n    }\n  }\n\n  handleKeyDown = e => {\n    const { submitOnEnter, inputProps, cancelOnEscape } = this.props\n    const isEnter = [13, 'Enter'].some(c => e.keyCode === c || e.code === c)\n    const isEscape = [27, 'Escape', 'Esc'].some(\n      c => e.keyCode === c || e.code === c\n    )\n    if (isEnter) {\n      submitOnEnter && this.handleSave()\n      e.preventDefault()\n    }\n    if (isEscape) {\n      cancelOnEscape && this.handleCancel()\n      e.preventDefault()\n    }\n    inputProps.onKeyDown && inputProps.onKeyDown(e) // TODO: this sucks.\n  }\n\n  handleOnBlur = e => {\n    const { cancelOnUnfocus, submitOnUnfocus, inputProps } = this.props\n    const isEditingButton = this.editingButtons.current.contains(\n      e.relatedTarget\n    )\n    cancelOnUnfocus && !isEditingButton && this.handleCancel()\n    submitOnUnfocus && !isEditingButton && !cancelOnUnfocus && this.handleSave()\n    inputProps.onBlur && inputProps.onBlur(e) // TODO: this sucks.\n  }\n\n  handleViewFocus = e => {\n    this.setState({ viewFocused: true })\n    const { startEditingOnFocus, viewProps } = this.props\n    startEditingOnFocus && this.setState({ editing: true })\n    viewProps.onFocus && viewProps.onFocus(e)\n  }\n\n  handleKeyDownForView = e => {\n    const isEnter = [13, 'Enter'].some(c => e.keyCode === c || e.code === c)\n    const { startEditingOnEnter, viewProps } = this.props\n    const startEditing =\n      isEnter && this.state.viewFocused && startEditingOnEnter\n    startEditing && e.preventDefault()\n    startEditing && this.setState({ editing: true })\n    viewProps.onKeyDown && viewProps.onKeyDown(e)\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      valid: true,\n      value: e.target.value\n    })\n  }\n\n  handleCancel = () => {\n    this.setState(\n      {\n        valid: true,\n        editing: false,\n        value: this.state.savedValue || this.props.value\n      },\n      () => this.props.onCancel(this.state.value, this.props.inputProps)\n    )\n  }\n\n  handleActivateEditMode = () => {\n    this.setState(\n      {\n        editing: true\n      },\n      () => {\n        this.props.onEditingStart(this.state.value)\n      }\n    )\n  }\n\n  handleSave = () => {\n    const { onSave, validation, onValidationFail, inputProps } = this.props\n    const isValid = validation(this.state.value)\n    if (!isValid) {\n      return this.setState({ valid: false }, () => {\n        onValidationFail && onValidationFail(this.state.value)\n      })\n    }\n    this.setState(\n      {\n        editing: false,\n        savedValue: this.state.value\n      },\n      () => onSave(this.state.savedValue, inputProps)\n    )\n  }\n\n  _renderInput() {\n    if (this.props.type === 'textarea') {\n      return (\n        <textarea\n          ref={this.input}\n          className={styles.Editext__input}\n          editext={dataAttributes.input}\n          // this is here because,\n          // we still allow people to pass the tabIndex via inputProps\n          // also backward compatibility.\n          tabIndex={this.props.tabIndex}\n          {...this.props.inputProps}\n          onBlur={this.handleOnBlur}\n          value={this.state.value}\n          onChange={this.handleInputChange}\n          autoFocus={this.state.editing}\n        />\n      )\n    } else {\n      return (\n        <input\n          ref={this.input}\n          className={styles.Editext__input}\n          editext={dataAttributes.input}\n          // this is here because,\n          // we still allow people to pass the tabIndex via inputProps\n          // also backward compatibility.\n          tabIndex={this.props.tabIndex}\n          {...this.props.inputProps}\n          onKeyDown={this.handleKeyDown}\n          onBlur={this.handleOnBlur}\n          value={this.state.value}\n          type={this.props.type}\n          onChange={this.handleInputChange}\n          autoFocus={this.state.editing}\n        />\n      )\n    }\n  }\n\n  _renderEditingMode = () => {\n    const {\n      saveButtonClassName,\n      saveButtonContent,\n      cancelButtonClassName,\n      editContainerClassName,\n      viewContainerClassName,\n      cancelButtonContent,\n      onValidationFail,\n      validationMessage,\n      hint,\n      hideIcons,\n      buttonsAlign\n    } = this.props\n    const inputElem = this._renderInput()\n    // calculate save button classes\n    const saveButtonDefaultClasses = classnames(\n      `${styles.Editext__button}`,\n      `${styles.Editext__save_button}`,\n      hideIcons && `${styles.Editext__hide_default_icons}`\n    )\n    const saveButtonClass = saveButtonClassName || saveButtonDefaultClasses\n    // calculate cancel button classes\n    const cancelButtonDefaultClasses = classnames(\n      `${styles.Editext__button}`,\n      `${styles.Editext__cancel_button}`,\n      hideIcons && `${styles.Editext__hide_default_icons}`\n    )\n    const cancelButtonClass =\n      cancelButtonClassName || cancelButtonDefaultClasses\n    let editContainerClass = styles.Editext__editing_container\n    if (editContainerClassName) editContainerClass = editContainerClassName\n    if (viewContainerClassName) editContainerClass = viewContainerClassName\n    const buttonsContainerClass = classnames(\n      styles.Editext__buttons_container,\n      buttonsAlign === 'before' && `${styles.Editext__buttons_before_aligned}`,\n      buttonsAlign === 'after' && `${styles.Editext__buttons_after_aligned}`\n    )\n    return (\n      <div>\n        <div\n          ref={this.editingContainer}\n          className={editContainerClass}\n          editext={dataAttributes.editContainer}\n        >\n          {buttonsAlign === 'after' && inputElem}\n          <div className={buttonsContainerClass} ref={this.editingButtons}>\n            <button\n              ref={this.saveButton}\n              editext={dataAttributes.saveButton}\n              type='button'\n              className={saveButtonClass}\n              onClick={this.handleSave}\n            >\n              {saveButtonContent}\n            </button>\n            <button\n              type='button'\n              editext={dataAttributes.cancelButton}\n              className={cancelButtonClass}\n              onClick={this.handleCancel}\n            >\n              {cancelButtonContent}\n            </button>\n          </div>\n          {buttonsAlign === 'before' && inputElem}\n        </div>\n        {!this.state.valid && !onValidationFail && (\n          <div className={styles.Editext__validation_message}>\n            {validationMessage}\n          </div>\n        )}\n        {hint && (\n          <div className={styles.Editext__hint} editext={dataAttributes.hint}>\n            {hint}\n          </div>\n        )}\n      </div>\n    )\n  }\n\n  _renderViewMode = () => {\n    const {\n      viewProps,\n      editButtonClassName,\n      editButtonContent,\n      viewContainerClassName,\n      hideIcons,\n      buttonsAlign,\n      editOnViewClick,\n      showButtonsOnHover\n    } = this.props\n    // calculate edit button classes\n    const editButtonDefaultClasses = classnames(\n      `${styles.Editext__button}`,\n      `${styles.Editext__edit_button}`,\n      hideIcons && `${styles.Editext__hide_default_icons}`\n    )\n    const editButtonClass = editButtonClassName || editButtonDefaultClasses\n    const viewContainerClass = classnames(\n      viewContainerClassName || styles.Editext__view_container,\n      showButtonsOnHover && `${styles.Editext__buttons_showButtonsOnHover}`\n    )\n    const buttonsContainerClass = classnames(\n      styles.Editext__buttons_container,\n      buttonsAlign === 'before' && `${styles.Editext__buttons_before_aligned}`,\n      buttonsAlign === 'after' && `${styles.Editext__buttons_after_aligned}`\n    )\n    const viewClickHandler = editOnViewClick\n      ? this.handleActivateEditMode\n      : undefined\n    return (\n      <div\n        className={viewContainerClass}\n        editext={dataAttributes.viewContainer}\n      >\n        {buttonsAlign === 'after' && (\n          <div\n            // this is here because,\n            // we still allow people to pass the tabIndex via inputProps\n            // also backward compatibility.\n            tabIndex={this.props.tabIndex}\n            {...viewProps}\n            onKeyDown={this.handleKeyDownForView}\n            onFocus={this.handleViewFocus}\n            onClick={viewClickHandler}\n            editext='view'\n          >\n            {this.state.value}\n          </div>\n        )}\n        <div className={buttonsContainerClass}>\n          <button\n            type='button'\n            editext={dataAttributes.editButton}\n            className={editButtonClass}\n            onClick={this.handleActivateEditMode}\n          >\n            {editButtonContent}\n          </button>\n        </div>\n        {buttonsAlign === 'before' && (\n          <div\n            // this is here because,\n            // we still allow people to pass the tabIndex via inputProps\n            // also backward compatibility.\n            tabIndex={this.props.tabIndex}\n            {...viewProps}\n            onKeyDown={this.handleKeyDownForView}\n            onFocus={this.handleViewFocus}\n            onClick={viewClickHandler}\n            editext={dataAttributes.viewContainer}\n          >\n            {this.state.value}\n          </div>\n        )}\n      </div>\n    )\n  }\n\n  render() {\n    const mode = this.state.editing\n      ? this._renderEditingMode()\n      : this._renderViewMode()\n    const { mainContainerClassName, className } = this.props\n    const clsName = classnames(\n      mainContainerClassName || styles.Editext__main_container,\n      className\n    )\n    return <div className={clsName}>{mode}</div>\n  }\n}\n\nEdiText.defaultProps = {\n  value: '',\n  type: 'text',\n  validationMessage: 'Invalid Value',\n  validation: _v => true,\n  onEditingStart: _v => null,\n  onCancel: _v => null,\n  inputProps: { onKeyDown: _e => {}, onBlur: _e => {}, onFocus: _e => {} },\n  viewProps: { onKeyDown: _e => {}, onFocus: _e => {} },\n  cancelButtonContent: '',\n  saveButtonContent: '',\n  editButtonContent: '',\n  hideIcons: false,\n  buttonsAlign: 'after',\n  editing: false\n}\n\nEdiText.propTypes = {\n  inputProps: PropTypes.object,\n  viewProps: PropTypes.object,\n  value: PropTypes.string.isRequired,\n  hint: PropTypes.node,\n  validationMessage: PropTypes.node,\n  validation: PropTypes.func,\n  onValidationFail: PropTypes.func,\n  type: PropTypes.oneOf([\n    'text',\n    'textarea',\n    'password',\n    'email',\n    'number',\n    'date',\n    'datetime-local',\n    'time',\n    'month',\n    'url',\n    'week',\n    'tel'\n  ]).isRequired,\n  // Events\n  onCancel: PropTypes.func,\n  onSave: PropTypes.func.isRequired,\n  onEditingStart: PropTypes.func,\n  // classNames\n  className: PropTypes.string,\n  saveButtonClassName: PropTypes.string,\n  editButtonClassName: PropTypes.string,\n  cancelButtonClassName: PropTypes.string,\n  mainContainerClassName: PropTypes.string,\n  editContainerClassName: PropTypes.string,\n  viewContainerClassName: PropTypes.string,\n  // Custom Button Texts\n  cancelButtonContent: PropTypes.any,\n  saveButtonContent: PropTypes.any,\n  editButtonContent: PropTypes.any,\n  hideIcons: PropTypes.bool,\n  buttonsAlign: PropTypes.oneOf(['after', 'before']),\n  editOnViewClick: PropTypes.bool,\n  editing: PropTypes.bool,\n  showButtonsOnHover: PropTypes.bool,\n  submitOnEnter: PropTypes.bool,\n  cancelOnEscape: PropTypes.bool,\n  cancelOnUnfocus: PropTypes.bool,\n  submitOnUnfocus: PropTypes.bool,\n  // navigating between inputs via tabbing is common.\n  // And tabIndex will probably be same for both view and input props\n  // here we are adding a new prop just for this special case to save people\n  // from creating duplicate code for both `inputProps` and `viewProps`\n  tabIndex: PropTypes.any,\n  startEditingOnFocus: PropTypes.bool,\n  startEditingOnEnter: PropTypes.bool\n}\n"],"names":["classnames","Array","arguments","filter","a","join","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","dataAttributes","EdiText","Component","props","e","_this","submitOnEnter","inputProps","cancelOnEscape","isEnter","some","c","keyCode","code","isEscape","handleSave","preventDefault","handleCancel","onKeyDown","cancelOnUnfocus","submitOnUnfocus","isEditingButton","editingButtons","current","contains","relatedTarget","onBlur","setState","viewFocused","startEditingOnFocus","viewProps","editing","onFocus","startEditingOnEnter","startEditing","state","valid","value","target","savedValue","onCancel","onEditingStart","onSave","validation","onValidationFail","saveButtonClassName","saveButtonContent","cancelButtonClassName","editContainerClassName","viewContainerClassName","cancelButtonContent","validationMessage","hint","hideIcons","buttonsAlign","inputElem","_renderInput","saveButtonDefaultClasses","styles","saveButtonClass","cancelButtonDefaultClasses","cancelButtonClass","editContainerClass","buttonsContainerClass","React","editingContainer","className","editext","saveButton","onClick","editButtonClassName","editButtonContent","editOnViewClick","showButtonsOnHover","editButtonDefaultClasses","editButtonClass","viewContainerClass","viewClickHandler","handleActivateEditMode","undefined","tabIndex","handleKeyDownForView","handleViewFocus","createRef","input","checkPropsConsistency","this","console","warn","prevProps","_prevState","nextState","Object","keys","length","handleOnBlur","onChange","handleInputChange","autoFocus","handleKeyDown","mode","_renderEditingMode","_renderViewMode","mainContainerClassName","clsName","defaultProps","_v","_e","propTypes","PropTypes","object","string","isRequired","node","func","oneOf","any","bool"],"mappings":"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"}